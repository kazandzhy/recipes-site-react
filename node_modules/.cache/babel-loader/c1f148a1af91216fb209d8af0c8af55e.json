{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\cook-time\\\\CookTime.js\";\nimport React, { Component } from \"react\";\nimport s from \"./CookTime.module.css\";\nexport default class CookTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cookingTime = this.props.cookTime;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.isPause = false;\n    this.isStart = true;\n\n    this.counter = () => {\n      this.minutes = this.cookingTime;\n\n      if (this.seconds == -1) {\n        this.seconds = 59;\n        this.cookingTime--;\n      }\n\n      if (this.seconds >= 0 && this.seconds <= 9) {\n        this.seconds = `0${this.seconds}`;\n      }\n\n      if (this.cookingTime >= 0 && this.cookingTime <= 9) {\n        this.minutes = `0${this.cookingTime}`;\n      }\n\n      if (this.cookingTime == 0 && this.seconds == 0) {\n        clearInterval(this.interval);\n      } // document.getElementById(`timeInfo${id}`).innerHTML =\n      //   minutes + \"min : \" + seconds + \"sec\";\n      // seconds--;\n\n    };\n\n    this.pauseCounter = () => {\n      // user can not press pause and continue before start\n      if (!this.isStart) {\n        clearInterval(this.interval);\n        this.isPause = true;\n      }\n    };\n\n    this.startCounter = () => {\n      clearInterval(this.interval);\n      this.isStart = true;\n      setTimeout(() => {\n        // document.getElementById(`timeInfo${id}`).style.display = \"block\";\n        // cookingTime = recipes[id].cookTime;\n        this.seconds = 0;\n      }, 1);\n\n      if (this.isStart) {\n        this.interval = setInterval(this.counter, 1000);\n        this.isStart = false;\n        return this.interval;\n      }\n    };\n\n    this.continueCounter = () => {\n      if (this.isPause) {\n        clearInterval(this.interval);\n        this.interval = setInterval(this.counter, 1000);\n        this.isPause = false;\n        return this.interval;\n      }\n    };\n  }\n\n  render() {\n    const {\n      cookTime\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Cook Time: \", cookTime, \" minutes\"), React.createElement(\"button\", {\n      className: s.Start,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: s.Pause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: s.Continue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: s.TimeInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/cook-time/CookTime.js"],"names":["React","Component","s","CookTime","cookingTime","props","cookTime","seconds","minutes","isPause","isStart","counter","clearInterval","interval","pauseCounter","startCounter","setTimeout","setInterval","continueCounter","render","Start","Pause","Continue","TimeInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport s from \"./CookTime.module.css\";\r\n\r\nexport default class CookTime extends Component {\r\n  cookingTime = this.props.cookTime;\r\n  seconds = 0;\r\n  minutes = 0;\r\n  interval;\r\n  pauseBtn;\r\n  isPause = false;\r\n  isStart = true;\r\n  id;\r\n  prevId;\r\n\r\n  counter = () => {\r\n    this.minutes = this.cookingTime;\r\n    if (this.seconds == -1) {\r\n      this.seconds = 59;\r\n      this.cookingTime--;\r\n    }\r\n\r\n    if (this.seconds >= 0 && this.seconds <= 9) {\r\n      this.seconds = `0${this.seconds}`;\r\n    }\r\n\r\n    if (this.cookingTime >= 0 && this.cookingTime <= 9) {\r\n      this.minutes = `0${this.cookingTime}`;\r\n    }\r\n\r\n    if (this.cookingTime == 0 && this.seconds == 0) {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    // document.getElementById(`timeInfo${id}`).innerHTML =\r\n    //   minutes + \"min : \" + seconds + \"sec\";\r\n    // seconds--;\r\n  };\r\n\r\n  pauseCounter = () => {\r\n    // user can not press pause and continue before start\r\n    if (!this.isStart) {\r\n      clearInterval(this.interval);\r\n      this.isPause = true;\r\n    }\r\n  };\r\n\r\n  startCounter = () => {\r\n    clearInterval(this.interval);\r\n    this.isStart = true;\r\n    setTimeout(() => {\r\n      // document.getElementById(`timeInfo${id}`).style.display = \"block\";\r\n      // cookingTime = recipes[id].cookTime;\r\n      this.seconds = 0;\r\n    }, 1);\r\n\r\n    if (this.isStart) {\r\n      this.interval = setInterval(this.counter, 1000);\r\n      this.isStart = false;\r\n      return this.interval;\r\n    }\r\n  };\r\n\r\n  continueCounter = () => {\r\n    if (this.isPause) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.counter, 1000);\r\n      this.isPause = false;\r\n      return this.interval;\r\n    }\r\n  };\r\n  render() {\r\n    const { cookTime } = this.props;\r\n    return (\r\n      <div>\r\n        <p>Cook Time: {cookTime} minutes</p>\r\n        <button className={s.Start}>Start</button>\r\n        <button className={s.Pause}>Pause</button>\r\n        <button className={s.Continue}>Continue</button>\r\n        <div className={s.TimeInfo}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}