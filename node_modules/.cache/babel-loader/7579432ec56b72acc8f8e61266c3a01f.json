{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\recipes-page-components\\\\RecipesDetails.js\";\nimport React, { Component } from \"react\";\nimport Images from \"../../assets\";\nimport { Image, Li, Ol } from \"../ui\";\nimport RecipesData from \"../recipes-database/RecipesData\";\nimport CookTime from \"../cook-time\";\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport s from \"./RecipesDetails.module.css\";\nexport default class RecipesDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.recipes = new RecipesData();\n    this.ingrKey = 0;\n    this.instrKey = 0;\n    this.state = {\n      recipe: null,\n      loading: true,\n      error: false\n    };\n\n    this.onRecipeLoaded = recipe => {\n      this.setState({\n        recipe,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.onError = error => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.onLoad = () => {\n      this.setState({\n        loading: true,\n        error: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    this.onLoad();\n    const {\n      itemId\n    } = this.props;\n    console.log(itemId);\n    this.recipes.getRecipe(itemId).then(this.onRecipeLoaded).catch(this.onError);\n  }\n\n  renderIngredients(ingrs) {\n    return ingrs.map(ingr => {\n      this.ingrKey++;\n      return React.createElement(Li, {\n        key: this.ingrKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, ingr);\n    });\n  }\n\n  renderInstructions(instrs) {\n    return instrs.map(instr => {\n      this.instrKey++;\n      return React.createElement(Li, {\n        key: this.instrKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, instr);\n    });\n  }\n\n  render() {\n    const {\n      recipe,\n      loading,\n      error\n    } = this.state;\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        className: s.RecipesDetailsSpinner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n\n    if (error) {\n      return React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    }\n\n    const [{\n      name,\n      id,\n      yields,\n      cookTime,\n      ingredients,\n      instructions\n    }] = recipe;\n    const ingrs = this.renderIngredients(ingredients);\n    const instrs = this.renderInstructions(instructions);\n    return React.createElement(\"div\", {\n      className: s.RecipesDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: s.RecipeContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, name), React.createElement(Image, {\n      src: Images[id],\n      alt: \"Recipe Image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Yield: \", yields, \" servings\"), React.createElement(CookTime, {\n      cookTime: cookTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Ol, {\n      headText: \"Ingredients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, ingrs), React.createElement(Ol, {\n      headText: \"Instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, instrs)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/recipes-page-components/RecipesDetails.js"],"names":["React","Component","Images","Image","Li","Ol","RecipesData","CookTime","Spinner","ErrorIndicator","s","RecipesDetails","recipes","ingrKey","instrKey","state","recipe","loading","error","onRecipeLoaded","setState","onError","onLoad","componentDidMount","updateItem","componentDidUpdate","prevProps","props","itemId","console","log","getRecipe","then","catch","renderIngredients","ingrs","map","ingr","renderInstructions","instrs","instr","render","RecipesDetailsSpinner","name","id","yields","cookTime","ingredients","instructions","RecipeContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAT,EAAgBC,EAAhB,EAAoBC,EAApB,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,OAAOC,CAAP,MAAc,6BAAd;AAEA,eAAe,MAAMC,cAAN,SAA6BV,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpDW,OADoD,GAC1C,IAAIN,WAAJ,EAD0C;AAAA,SAEpDO,OAFoD,GAE1C,CAF0C;AAAA,SAGpDC,QAHoD,GAGzC,CAHyC;AAAA,SAKpDC,KALoD,GAK5C;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAL4C;;AAAA,SAqBpDC,cArBoD,GAqBlCH,MAAD,IAAY;AAC3B,WAAKI,QAAL,CAAc;AACZJ,QAAAA,MADY;AAEZC,QAAAA,OAAO,EAAE,KAFG;AAGZC,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKD,KA3BmD;;AAAA,SA6BpDG,OA7BoD,GA6BzCH,KAAD,IAAW;AACnB,WAAKE,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAE,IADK;AAEZD,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAlCmD;;AAAA,SAoCpDK,MApCoD,GAoC3C,MAAM;AACb,WAAKF,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE,IADG;AAEZC,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KAzCmD;AAAA;;AAWpDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKC,KAAL,CAAWC,MAAX,KAAsBF,SAAS,CAACE,MAApC,EAA4C;AAC1C,WAAKJ,UAAL;AACD;AACF;;AAwBDA,EAAAA,UAAU,GAAG;AACX,SAAKF,MAAL;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAKhB,OAAL,CACGmB,SADH,CACaH,MADb,EAEGI,IAFH,CAEQ,KAAKb,cAFb,EAGGc,KAHH,CAGS,KAAKZ,OAHd;AAID;;AAEDa,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACvB,WAAOA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACzB,WAAKxB,OAAL;AACA,aAAO,oBAAC,EAAD;AAAI,QAAA,GAAG,EAAE,KAAKA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBwB,IAAxB,CAAP;AACD,KAHM,CAAP;AAID;;AAEDC,EAAAA,kBAAkB,CAACC,MAAD,EAAS;AACzB,WAAOA,MAAM,CAACH,GAAP,CAAYI,KAAD,IAAW;AAC3B,WAAK1B,QAAL;AACA,aAAO,oBAAC,EAAD;AAAI,QAAA,GAAG,EAAE,KAAKA,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB0B,KAAzB,CAAP;AACD,KAHM,CAAP;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AAEA,QAAIE,OAAJ,EAAa;AACX,aACE;AAAK,QAAA,SAAS,EAAEP,CAAC,CAACgC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;AAED,QAAIxB,KAAJ,EAAW;AACT,aAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,UAAM,CAAC;AAAEyB,MAAAA,IAAF;AAAQC,MAAAA,EAAR;AAAYC,MAAAA,MAAZ;AAAoBC,MAAAA,QAApB;AAA8BC,MAAAA,WAA9B;AAA2CC,MAAAA;AAA3C,KAAD,IAA8DhC,MAApE;AACA,UAAMmB,KAAK,GAAG,KAAKD,iBAAL,CAAuBa,WAAvB,CAAd;AACA,UAAMR,MAAM,GAAG,KAAKD,kBAAL,CAAwBU,YAAxB,CAAf;AAEA,WACE;AAAK,MAAA,SAAS,EAAEtC,CAAC,CAACC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAED,CAAC,CAACuC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,IAAL,CADF,EAEE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEzC,MAAM,CAAC0C,EAAD,CAAlB;AAAwB,MAAA,GAAG,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWC,MAAX,cAHF,EAIE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,EAAD;AAAI,MAAA,QAAQ,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BX,KAA5B,CALF,EAME,oBAAC,EAAD;AAAI,MAAA,QAAQ,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BI,MAA7B,CANF,CADF,CADF;AAYD;;AAlGmD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Images from \"../../assets\";\r\nimport { Image, Li, Ol } from \"../ui\";\r\nimport RecipesData from \"../recipes-database/RecipesData\";\r\nimport CookTime from \"../cook-time\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport s from \"./RecipesDetails.module.css\";\r\n\r\nexport default class RecipesDetails extends Component {\r\n  recipes = new RecipesData();\r\n  ingrKey = 0;\r\n  instrKey = 0;\r\n\r\n  state = {\r\n    recipe: null,\r\n    loading: true,\r\n    error: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateItem();\r\n    }\r\n  }\r\n\r\n  onRecipeLoaded = (recipe) => {\r\n    this.setState({\r\n      recipe,\r\n      loading: false,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  onError = (error) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  onLoad = () => {\r\n    this.setState({\r\n      loading: true,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  updateItem() {\r\n    this.onLoad();\r\n    const { itemId } = this.props;\r\n    console.log(itemId);\r\n    this.recipes\r\n      .getRecipe(itemId)\r\n      .then(this.onRecipeLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  renderIngredients(ingrs) {\r\n    return ingrs.map((ingr) => {\r\n      this.ingrKey++;\r\n      return <Li key={this.ingrKey}>{ingr}</Li>;\r\n    });\r\n  }\r\n\r\n  renderInstructions(instrs) {\r\n    return instrs.map((instr) => {\r\n      this.instrKey++;\r\n      return <Li key={this.instrKey}>{instr}</Li>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { recipe, loading, error } = this.state;\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className={s.RecipesDetailsSpinner}>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    const [{ name, id, yields, cookTime, ingredients, instructions }] = recipe;\r\n    const ingrs = this.renderIngredients(ingredients);\r\n    const instrs = this.renderInstructions(instructions);\r\n\r\n    return (\r\n      <div className={s.RecipesDetails}>\r\n        <div className={s.RecipeContent}>\r\n          <h1>{name}</h1>\r\n          <Image src={Images[id]} alt=\"Recipe Image\" />\r\n          <p>Yield: {yields} servings</p>\r\n          <CookTime cookTime={cookTime} />\r\n          <Ol headText=\"Ingredients\">{ingrs}</Ol>\r\n          <Ol headText=\"Instructions\">{instrs}</Ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}