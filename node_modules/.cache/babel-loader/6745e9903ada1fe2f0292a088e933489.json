{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\cook-time\\\\CookTime.js\";\nimport React, { Component } from \"react\";\nimport s from \"./CookTime.module.css\";\nexport default class CookTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      classNames: `${s.TimeInfo} ${s.Hide}`,\n      seconds: 0,\n      minutes: 0,\n      isPause: false,\n      isStart: true,\n      cookingTime: 0\n    };\n\n    this.counter = () => {\n      this.minutes = this.cookingTime;\n\n      if (this.seconds == -1) {\n        this.seconds = 59;\n        this.cookingTime--;\n      }\n\n      if (this.seconds >= 0 && this.seconds <= 9) {\n        this.seconds = `0${this.seconds}`;\n      }\n\n      if (this.cookingTime >= 0 && this.cookingTime <= 9) {\n        this.minutes = `0${this.cookingTime}`;\n      }\n\n      if (this.cookingTime == 0 && this.seconds == 0) {\n        clearInterval(this.interval);\n      } // document.getElementById(`timeInfo${id}`).innerHTML =\n      //   minutes + \"min : \" + seconds + \"sec\";\n      // seconds--;\n\n    };\n\n    this.startTimer = () => {\n      clearInterval(this.interval);\n      this.isStart = true;\n      setTimeout(() => {\n        this.setState({\n          classNames: `${s.TimeInfo} ${s.Show}`\n        });\n        this.cookingTime = this.props.cookTime;\n        this.seconds = 0;\n      }, 1);\n\n      if (this.isStart) {\n        this.interval = setInterval(this.counter, 1000);\n        this.isStart = false;\n        return this.interval;\n      }\n    };\n  }\n\n  // continueCounter = () => {\n  //   if (this.isPause) {\n  //     clearInterval(this.interval);\n  //     this.interval = setInterval(this.counter, 1000);\n  //     this.isPause = false;\n  //     return this.interval;\n  //   }\n  // };\n  render() {\n    const {\n      classNames\n    } = this.state;\n    const {\n      cookTime\n    } = this.props;\n    const timerContent = `${this.minutes}min : ${this.seconds}sec`;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Cook Time: \", cookTime, \" minutes\"), React.createElement(\"button\", {\n      className: s.Start,\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: s.Pause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: s.Continue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, timerContent)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/cook-time/CookTime.js"],"names":["React","Component","s","CookTime","state","classNames","TimeInfo","Hide","seconds","minutes","isPause","isStart","cookingTime","counter","clearInterval","interval","startTimer","setTimeout","setState","Show","props","cookTime","setInterval","render","timerContent","Start","Pause","Continue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport s from \"./CookTime.module.css\";\r\n\r\nexport default class CookTime extends Component {\r\n  interval;\r\n  pauseBtn;\r\n  id;\r\n  prevId;\r\n\r\n  state = {\r\n    classNames: `${s.TimeInfo} ${s.Hide}`,\r\n    seconds: 0,\r\n    minutes: 0,\r\n    isPause: false,\r\n    isStart: true,\r\n    cookingTime: 0,\r\n  };\r\n\r\n  counter = () => {\r\n    this.minutes = this.cookingTime;\r\n    if (this.seconds == -1) {\r\n      this.seconds = 59;\r\n      this.cookingTime--;\r\n    }\r\n\r\n    if (this.seconds >= 0 && this.seconds <= 9) {\r\n      this.seconds = `0${this.seconds}`;\r\n    }\r\n\r\n    if (this.cookingTime >= 0 && this.cookingTime <= 9) {\r\n      this.minutes = `0${this.cookingTime}`;\r\n    }\r\n\r\n    if (this.cookingTime == 0 && this.seconds == 0) {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    // document.getElementById(`timeInfo${id}`).innerHTML =\r\n    //   minutes + \"min : \" + seconds + \"sec\";\r\n    // seconds--;\r\n  };\r\n\r\n  // pauseCounter = () => {\r\n  //   // user can not press pause and continue before start\r\n  //   if (!this.isStart) {\r\n  //     clearInterval(this.interval);\r\n  //     this.isPause = true;\r\n  //   }\r\n  // };\r\n\r\n  startTimer = () => {\r\n    clearInterval(this.interval);\r\n    this.isStart = true;\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classNames: `${s.TimeInfo} ${s.Show}`,\r\n      });\r\n\r\n      this.cookingTime = this.props.cookTime;\r\n      this.seconds = 0;\r\n    }, 1);\r\n\r\n    if (this.isStart) {\r\n      this.interval = setInterval(this.counter, 1000);\r\n      this.isStart = false;\r\n      return this.interval;\r\n    }\r\n  };\r\n\r\n  // continueCounter = () => {\r\n  //   if (this.isPause) {\r\n  //     clearInterval(this.interval);\r\n  //     this.interval = setInterval(this.counter, 1000);\r\n  //     this.isPause = false;\r\n  //     return this.interval;\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { classNames } = this.state;\r\n    const { cookTime } = this.props;\r\n    const timerContent = `${this.minutes}min : ${this.seconds}sec`;\r\n    return (\r\n      <div>\r\n        <p>Cook Time: {cookTime} minutes</p>\r\n        <button className={s.Start} onClick={this.startTimer}>\r\n          Start\r\n        </button>\r\n        <button className={s.Pause}>Pause</button>\r\n        <button className={s.Continue}>Continue</button>\r\n        <div className={classNames}>\r\n          <span>{timerContent}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}