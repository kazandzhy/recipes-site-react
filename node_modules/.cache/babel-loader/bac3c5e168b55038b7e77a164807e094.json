{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\cook-time\\\\CookTime.js\";\nimport React, { Component } from \"react\";\nimport s from \"./CookTime.module.css\";\nexport default class CookTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      classNames: `${s.TimeInfo} ${s.Hide}`,\n      seconds: 0,\n      minutes: 0,\n      isPause: false,\n      isStart: true,\n      cookingTime: 0\n    };\n\n    this.counter = () => {\n      this.setState({\n        minutes: this.state.cookingTime\n      });\n\n      if (this.state.seconds == -1) {\n        this.setState({\n          seconds: 59,\n          cookingTime: this.state.cookingTime--\n        });\n      } // if (this.state.seconds >= 0 && this.state.seconds <= 9) {\n      //   this.setState({\n      //     seconds: `0${this.state.seconds}`,\n      //   });\n      // }\n\n\n      if (this.state.cookingTime >= 0 && this.state.cookingTime <= 9) {\n        this.setState({\n          minutes: `0${this.state.cookingTime}`\n        });\n      }\n\n      if (this.state.cookingTime == 0 && this.state.seconds == 0) {\n        clearInterval(this.interval);\n      } // document.getElementById(`timeInfo${id}`).innerHTML =\n      //   minutes + \"min : \" + seconds + \"sec\";\n\n\n      this.setState({\n        seconds: this.state.seconds--\n      });\n    };\n\n    this.startTimer = () => {\n      clearInterval(this.interval);\n      this.setState({\n        isStart: true\n      });\n      setTimeout(() => {\n        this.setState({\n          classNames: `${s.TimeInfo} ${s.Show}`\n        });\n        this.setState({\n          cookingTime: this.props.cookTime,\n          seconds: 0\n        });\n      }, 1);\n\n      if (this.state.isStart) {\n        this.interval = setInterval(this.counter, 1000);\n        console.log(this.interval); // why 18?\n\n        this.setState({\n          isStart: false\n        });\n        console.log(this.state.isStart); // why still true?\n\n        return this.interval;\n      }\n    };\n  }\n\n  // continueCounter = () => {\n  //   if (this.isPause) {\n  //     clearInterval(this.interval);\n  //     this.interval = setInterval(this.counter, 1000);\n  //     this.isPause = false;\n  //     return this.interval;\n  //   }\n  // };\n  render() {\n    const {\n      classNames,\n      minutes,\n      seconds\n    } = this.state;\n    const {\n      cookTime\n    } = this.props;\n    const timerContent = `${minutes}min : ${seconds}sec`;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cook Time: \", cookTime, \" minutes\"), React.createElement(\"button\", {\n      className: s.Start,\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: s.Pause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: s.Continue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, timerContent)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/cook-time/CookTime.js"],"names":["React","Component","s","CookTime","state","classNames","TimeInfo","Hide","seconds","minutes","isPause","isStart","cookingTime","counter","setState","clearInterval","interval","startTimer","setTimeout","Show","props","cookTime","setInterval","console","log","render","timerContent","Start","Pause","Continue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport s from \"./CookTime.module.css\";\r\n\r\nexport default class CookTime extends Component {\r\n  interval;\r\n  pauseBtn;\r\n  id;\r\n  prevId;\r\n\r\n  state = {\r\n    classNames: `${s.TimeInfo} ${s.Hide}`,\r\n    seconds: 0,\r\n    minutes: 0,\r\n    isPause: false,\r\n    isStart: true,\r\n    cookingTime: 0,\r\n  };\r\n\r\n  counter = () => {\r\n    this.setState({\r\n      minutes: this.state.cookingTime,\r\n    });\r\n\r\n    if (this.state.seconds == -1) {\r\n      this.setState({\r\n        seconds: 59,\r\n        cookingTime: this.state.cookingTime--,\r\n      });\r\n    }\r\n\r\n    // if (this.state.seconds >= 0 && this.state.seconds <= 9) {\r\n    //   this.setState({\r\n    //     seconds: `0${this.state.seconds}`,\r\n    //   });\r\n    // }\r\n\r\n    if (this.state.cookingTime >= 0 && this.state.cookingTime <= 9) {\r\n      this.setState({\r\n        minutes: `0${this.state.cookingTime}`,\r\n      });\r\n    }\r\n\r\n    if (this.state.cookingTime == 0 && this.state.seconds == 0) {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    // document.getElementById(`timeInfo${id}`).innerHTML =\r\n    //   minutes + \"min : \" + seconds + \"sec\";\r\n    this.setState({\r\n      seconds: this.state.seconds--,\r\n    });\r\n  };\r\n\r\n  // pauseCounter = () => {\r\n  //   // user can not press pause and continue before start\r\n  //   if (!this.isStart) {\r\n  //     clearInterval(this.interval);\r\n  //     this.isPause = true;\r\n  //   }\r\n  // };\r\n\r\n  startTimer = () => {\r\n    clearInterval(this.interval);\r\n    this.setState({\r\n      isStart: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classNames: `${s.TimeInfo} ${s.Show}`,\r\n      });\r\n\r\n      this.setState({\r\n        cookingTime: this.props.cookTime,\r\n        seconds: 0,\r\n      });\r\n    }, 1);\r\n\r\n    if (this.state.isStart) {\r\n      this.interval = setInterval(this.counter, 1000);\r\n      console.log(this.interval); // why 18?\r\n      this.setState({\r\n        isStart: false,\r\n      });\r\n      console.log(this.state.isStart); // why still true?\r\n      return this.interval;\r\n    }\r\n  };\r\n\r\n  // continueCounter = () => {\r\n  //   if (this.isPause) {\r\n  //     clearInterval(this.interval);\r\n  //     this.interval = setInterval(this.counter, 1000);\r\n  //     this.isPause = false;\r\n  //     return this.interval;\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { classNames, minutes, seconds } = this.state;\r\n    const { cookTime } = this.props;\r\n    const timerContent = `${minutes}min : ${seconds}sec`;\r\n    return (\r\n      <div>\r\n        <p>Cook Time: {cookTime} minutes</p>\r\n        <button className={s.Start} onClick={this.startTimer}>\r\n          Start\r\n        </button>\r\n        <button className={s.Pause}>Pause</button>\r\n        <button className={s.Continue}>Continue</button>\r\n        <div className={classNames}>\r\n          <span>{timerContent}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}