{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\recipes-page-components\\\\RecipesDetails.js\";\nimport React, { Component } from \"react\";\nimport Images from \"../../assets\";\nimport { Image, Li, Ol } from \"../ui\";\nimport RecipesData from \"../recipes-database/RecipesData\";\nimport CookTime from \"../cook-time\";\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport s from \"./RecipesDetails.module.css\";\nexport default class RecipesDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.recipes = new RecipesData();\n    this.ingrKey = 0;\n    this.instrKey = 0;\n    this.state = {\n      recipe: null,\n      loading: true\n    };\n\n    this.onRecipeLoaded = recipe => {\n      this.setState({\n        recipe,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.onError = error => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateRecipe();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateRecipe();\n    }\n  }\n\n  updateRecipe() {\n    const {\n      itemId\n    } = this.props;\n\n    if (!itemId) {\n      return;\n    }\n\n    const recipe = this.recipes.getRecipe(itemId);\n\n    try {\n      this.onRecipeLoaded(recipe);\n    } catch (error) {\n      this.onError(error);\n    }\n  }\n\n  renderIngredients(ingrs) {\n    return ingrs.map(ingr => {\n      this.ingrKey++;\n      return React.createElement(Li, {\n        key: this.ingrKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, ingr);\n    });\n  }\n\n  renderInstructions(instrs) {\n    return instrs.map(instr => {\n      this.instrKey++;\n      return React.createElement(Li, {\n        key: this.instrKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, instr);\n    });\n  }\n\n  render() {\n    const {\n      recipe,\n      loading,\n      error\n    } = this.state; // if (!recipe) {\n    //   return <div></div>;\n    // }\n\n    console.log(recipe);\n    const hasData = !(loading || error);\n    const errorMessage = error ? React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : null;\n    const spinner = loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : null;\n    const [{\n      ingredients,\n      instructions\n    }] = recipe;\n    const ingrs = this.renderIngredients(ingredients);\n    const instrs = this.renderInstructions(instructions);\n    const content = hasData ? React.createElement(RecipeView, {\n      recipe: recipe,\n      ingrs: ingrs,\n      instrs: instrs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: s.RecipesDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, errorMessage, spinner, content);\n  }\n\n}\n\nconst RecipeView = ({\n  recipe,\n  ingrs,\n  instrs\n}) => {\n  const [{\n    name,\n    id,\n    yields,\n    cookTime\n  }] = recipe;\n  return React.createElement(\"div\", {\n    className: s.RecipeContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, name), React.createElement(Image, {\n    src: Images[id],\n    alt: \"Recipe Image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Yield: \", yields, \" servings\"), React.createElement(CookTime, {\n    cookTime: cookTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Ol, {\n    headText: \"Ingredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, ingrs), React.createElement(Ol, {\n    headText: \"Instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, instrs));\n};","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/recipes-page-components/RecipesDetails.js"],"names":["React","Component","Images","Image","Li","Ol","RecipesData","CookTime","Spinner","ErrorIndicator","s","RecipesDetails","recipes","ingrKey","instrKey","state","recipe","loading","onRecipeLoaded","setState","error","onError","componentDidMount","updateRecipe","componentDidUpdate","prevProps","props","itemId","getRecipe","renderIngredients","ingrs","map","ingr","renderInstructions","instrs","instr","render","console","log","hasData","errorMessage","spinner","ingredients","instructions","content","RecipeView","name","id","yields","cookTime","RecipeContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Images from \"../../assets\";\r\nimport { Image, Li, Ol } from \"../ui\";\r\nimport RecipesData from \"../recipes-database/RecipesData\";\r\nimport CookTime from \"../cook-time\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport s from \"./RecipesDetails.module.css\";\r\n\r\nexport default class RecipesDetails extends Component {\r\n  recipes = new RecipesData();\r\n  ingrKey = 0;\r\n  instrKey = 0;\r\n\r\n  state = {\r\n    recipe: null,\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateRecipe();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateRecipe();\r\n    }\r\n  }\r\n\r\n  onRecipeLoaded = (recipe) => {\r\n    this.setState({\r\n      recipe,\r\n      loading: false,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  onError = (error) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  updateRecipe() {\r\n    const { itemId } = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n    const recipe = this.recipes.getRecipe(itemId);\r\n    try {\r\n      this.onRecipeLoaded(recipe);\r\n    } catch (error) {\r\n      this.onError(error);\r\n    }\r\n  }\r\n\r\n  renderIngredients(ingrs) {\r\n    return ingrs.map((ingr) => {\r\n      this.ingrKey++;\r\n      return <Li key={this.ingrKey}>{ingr}</Li>;\r\n    });\r\n  }\r\n\r\n  renderInstructions(instrs) {\r\n    return instrs.map((instr) => {\r\n      this.instrKey++;\r\n      return <Li key={this.instrKey}>{instr}</Li>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { recipe, loading, error } = this.state;\r\n    // if (!recipe) {\r\n    //   return <div></div>;\r\n    // }\r\n    console.log(recipe);\r\n\r\n    const hasData = !(loading || error);\r\n\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const [{ ingredients, instructions }] = recipe;\r\n\r\n    const ingrs = this.renderIngredients(ingredients);\r\n    const instrs = this.renderInstructions(instructions);\r\n\r\n    const content = hasData ? (\r\n      <RecipeView recipe={recipe} ingrs={ingrs} instrs={instrs} />\r\n    ) : null;\r\n\r\n    return (\r\n      <div className={s.RecipesDetails}>\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RecipeView = ({ recipe, ingrs, instrs }) => {\r\n  const [{ name, id, yields, cookTime }] = recipe;\r\n\r\n  return (\r\n    <div className={s.RecipeContent}>\r\n      <h1>{name}</h1>\r\n      <Image src={Images[id]} alt=\"Recipe Image\" />\r\n      <p>Yield: {yields} servings</p>\r\n      <CookTime cookTime={cookTime} />\r\n      <Ol headText=\"Ingredients\">{ingrs}</Ol>\r\n      <Ol headText=\"Instructions\">{instrs}</Ol>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}