{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\cook-time\\\\CookTime.js\";\nimport React, { Component } from \"react\";\nimport s from \"./CookTime.module.css\";\nexport default class CookTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.seconds = 0;\n    this.minutes = 0;\n    this.isPause = false;\n    this.isStart = true;\n\n    this.counter = () => {\n      this.minutes = this.cookingTime;\n\n      if (seconds == -1) {\n        seconds = 59;\n        cookingTime--;\n      }\n\n      if (seconds >= 0 && seconds <= 9) {\n        seconds = `0${seconds}`;\n      }\n\n      if (cookingTime >= 0 && cookingTime <= 9) {\n        minutes = `0${cookingTime}`;\n      }\n\n      if (cookingTime == 0 && seconds == 0) {\n        clearInterval(interval);\n      }\n\n      document.getElementById(`timeInfo${id}`).innerHTML = minutes + \"min : \" + seconds + \"sec\";\n      seconds--;\n    };\n\n    this.pauseCounter = () => {\n      // user can not press pause and continue before start\n      if (!isStart) {\n        clearInterval(interval);\n        isPause = true;\n      }\n    };\n\n    this.startCounter = () => {\n      clearInterval(interval);\n      isStart = true;\n      setTimeout(() => {\n        document.getElementById(`timeInfo${id}`).style.display = \"block\";\n        cookingTime = recipes[id].cookTime;\n        seconds = 0;\n      }, 1);\n\n      if (isStart) {\n        interval = setInterval(counter, 1000);\n        isStart = false;\n        return interval;\n      }\n    };\n\n    this.continueCounter = () => {\n      if (isPause) {\n        clearInterval(interval);\n        interval = setInterval(counter, 1000);\n        isPause = false;\n        return interval;\n      }\n    };\n  }\n\n  render() {\n    const {\n      cookTime\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Cook Time: \", cookTime, \" minutes\"), React.createElement(\"button\", {\n      className: s.Start,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: s.Pause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: s.Continue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: s.TimeInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/cook-time/CookTime.js"],"names":["React","Component","s","CookTime","seconds","minutes","isPause","isStart","counter","cookingTime","clearInterval","interval","document","getElementById","id","innerHTML","pauseCounter","startCounter","setTimeout","style","display","recipes","cookTime","setInterval","continueCounter","render","props","Start","Pause","Continue","TimeInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport s from \"./CookTime.module.css\";\r\n\r\nexport default class CookTime extends Component {\r\n  cookingTime;\r\n  seconds = 0;\r\n  minutes = 0;\r\n  interval;\r\n  pauseBtn;\r\n  isPause = false;\r\n  isStart = true;\r\n  id;\r\n  prevId;\r\n\r\n  counter = () => {\r\n    this.minutes = this.cookingTime;\r\n    if (seconds == -1) {\r\n      seconds = 59;\r\n      cookingTime--;\r\n    }\r\n\r\n    if (seconds >= 0 && seconds <= 9) {\r\n      seconds = `0${seconds}`;\r\n    }\r\n\r\n    if (cookingTime >= 0 && cookingTime <= 9) {\r\n      minutes = `0${cookingTime}`;\r\n    }\r\n\r\n    if (cookingTime == 0 && seconds == 0) {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    document.getElementById(`timeInfo${id}`).innerHTML =\r\n      minutes + \"min : \" + seconds + \"sec\";\r\n    seconds--;\r\n  };\r\n\r\n  pauseCounter = () => {\r\n    // user can not press pause and continue before start\r\n    if (!isStart) {\r\n      clearInterval(interval);\r\n      isPause = true;\r\n    }\r\n  };\r\n\r\n  startCounter = () => {\r\n    clearInterval(interval);\r\n    isStart = true;\r\n    setTimeout(() => {\r\n      document.getElementById(`timeInfo${id}`).style.display = \"block\";\r\n      cookingTime = recipes[id].cookTime;\r\n      seconds = 0;\r\n    }, 1);\r\n\r\n    if (isStart) {\r\n      interval = setInterval(counter, 1000);\r\n      isStart = false;\r\n\r\n      return interval;\r\n    }\r\n  };\r\n\r\n  continueCounter = () => {\r\n    if (isPause) {\r\n      clearInterval(interval);\r\n      interval = setInterval(counter, 1000);\r\n      isPause = false;\r\n      return interval;\r\n    }\r\n  };\r\n  render() {\r\n    const { cookTime } = this.props;\r\n    return (\r\n      <div>\r\n        <p>Cook Time: {cookTime} minutes</p>\r\n        <button className={s.Start}>Start</button>\r\n        <button className={s.Pause}>Pause</button>\r\n        <button className={s.Continue}>Continue</button>\r\n        <div className={s.TimeInfo}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}