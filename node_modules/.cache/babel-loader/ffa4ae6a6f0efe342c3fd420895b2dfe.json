{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\cook-time\\\\CookTime.js\";\nimport React, { Component } from \"react\";\nimport s from \"./CookTime.module.css\";\nexport default class CookTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      classNames: `${s.TimeInfo} ${s.Hide}`,\n      seconds: 0,\n      minutes: this.props.cookTime,\n      isPause: false,\n      isStart: false,\n      cookingTime: 0,\n      interval: 0\n    };\n\n    this.counter = () => {\n      if (this.state.minutes === 0 && this.state.seconds === 0) {\n        this.setState({\n          interval: clearInterval(this.state.interval)\n        });\n        return;\n      }\n\n      if (this.state.seconds === 0) {\n        this.setState({\n          seconds: 59,\n          minutes: this.state.minutes - 1\n        });\n        return;\n      }\n\n      this.setState({\n        seconds: this.state.seconds - 1\n      });\n    };\n\n    this.startTimer = () => {\n      this.setState(state => {\n        return {\n          isStart: state.isStart,\n          interval: clearInterval(state.interval)\n        };\n      });\n      setTimeout(() => {\n        this.setState({\n          classNames: `${s.TimeInfo}`\n        });\n        this.setState({\n          minutes: this.props.cookTime,\n          seconds: 0\n        });\n      }, 1);\n\n      if (this.state.isStart) {\n        this.setState(state => {\n          return {\n            isStart: false,\n            interval: setInterval(this.counter, 1000)\n          };\n        });\n      }\n    };\n  }\n\n  // continueCounter = () => {\n  //   if (this.isPause) {\n  //     clearInterval(this.interval);\n  //     this.interval = setInterval(this.counter, 1000);\n  //     this.isPause = false;\n  //     return this.interval;\n  //   }\n  // };\n  render() {\n    const {\n      classNames,\n      minutes,\n      seconds\n    } = this.state;\n    const {\n      cookTime\n    } = this.props;\n    let minutesFormatted = minutes;\n    let secondsFormatted = seconds;\n\n    if (minutes >= 0 && minutes <= 9) {\n      minutesFormatted = `0${minutes}`;\n    }\n\n    if (seconds >= 0 && seconds <= 9) {\n      secondsFormatted = `0${this.state.seconds}`;\n    }\n\n    const timerContent = `${minutesFormatted}min : ${secondsFormatted}sec`;\n    return React.createElement(\"div\", {\n      className: s.cookTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Cook Time: \", cookTime, \" minutes\"), React.createElement(\"button\", {\n      className: s.Start,\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: s.Pause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: s.Continue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, timerContent)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/cook-time/CookTime.js"],"names":["React","Component","s","CookTime","state","classNames","TimeInfo","Hide","seconds","minutes","props","cookTime","isPause","isStart","cookingTime","interval","counter","setState","clearInterval","startTimer","setTimeout","setInterval","render","minutesFormatted","secondsFormatted","timerContent","Start","Pause","Continue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport s from \"./CookTime.module.css\";\r\n\r\nexport default class CookTime extends Component {\r\n  pauseBtn;\r\n  id;\r\n  prevId;\r\n\r\n  state = {\r\n    classNames: `${s.TimeInfo} ${s.Hide}`,\r\n    seconds: 0,\r\n    minutes: this.props.cookTime,\r\n    isPause: false,\r\n    isStart: false,\r\n    cookingTime: 0,\r\n    interval: 0,\r\n  };\r\n\r\n  counter = () => {\r\n    if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n      this.setState({\r\n        interval: clearInterval(this.state.interval),\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.state.seconds === 0) {\r\n      this.setState({\r\n        seconds: 59,\r\n        minutes: this.state.minutes - 1,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      seconds: this.state.seconds - 1,\r\n    });\r\n  };\r\n\r\n  // pauseCounter = () => {\r\n  //   // user can not press pause and continue before start\r\n  //   if (!this.isStart) {\r\n  //     clearInterval(this.interval);\r\n  //     this.isPause = true;\r\n  //   }\r\n  // };\r\n\r\n  startTimer = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        isStart: state.isStart,\r\n        interval: clearInterval(state.interval),\r\n      };\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classNames: `${s.TimeInfo}`,\r\n      });\r\n\r\n      this.setState({\r\n        minutes: this.props.cookTime,\r\n        seconds: 0,\r\n      });\r\n    }, 1);\r\n\r\n    if (this.state.isStart) {\r\n      this.setState((state) => {\r\n        return {\r\n          isStart: false,\r\n          interval: setInterval(this.counter, 1000),\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  // continueCounter = () => {\r\n  //   if (this.isPause) {\r\n  //     clearInterval(this.interval);\r\n  //     this.interval = setInterval(this.counter, 1000);\r\n  //     this.isPause = false;\r\n  //     return this.interval;\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { classNames, minutes, seconds } = this.state;\r\n    const { cookTime } = this.props;\r\n    let minutesFormatted = minutes;\r\n    let secondsFormatted = seconds;\r\n\r\n    if (minutes >= 0 && minutes <= 9) {\r\n      minutesFormatted = `0${minutes}`;\r\n    }\r\n\r\n    if (seconds >= 0 && seconds <= 9) {\r\n      secondsFormatted = `0${this.state.seconds}`;\r\n    }\r\n\r\n    const timerContent = `${minutesFormatted}min : ${secondsFormatted}sec`;\r\n    return (\r\n      <div className={s.cookTime}>\r\n        <p>Cook Time: {cookTime} minutes</p>\r\n        <button className={s.Start} onClick={this.startTimer}>\r\n          Start\r\n        </button>\r\n        <button className={s.Pause}>Pause</button>\r\n        <button className={s.Continue}>Continue</button>\r\n        <div className={classNames}>\r\n          <span>{timerContent}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}