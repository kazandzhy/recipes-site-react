{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\recipes-page-components\\\\RecipesDetails.js\";\nimport React, { Component } from \"react\";\nimport Images from \"../../assets\";\nimport { Image, Li, Ol } from \"../ui\";\nimport RecipesData from \"../recipes-database/RecipesData\";\nimport CookTime from \"../cook-time\";\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport s from \"./RecipesDetails.module.css\";\nexport default class RecipesDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.recipes = new RecipesData();\n    this.ingrKey = 0;\n    this.instrKey = 0;\n    this.state = {\n      recipe: null,\n      loading: true,\n      error: false,\n      imageLoading: \"loading\"\n    };\n\n    this.onLoadImage = () => {\n      this.setState({\n        imageLoading: \"loaded\"\n      });\n    };\n\n    this.onRecipeLoaded = recipe => {\n      this.setState({\n        recipe,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.onError = error => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.onLoad = () => {\n      this.setState({\n        loading: true,\n        error: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    this.onLoad();\n    const {\n      itemId\n    } = this.props;\n\n    if (!itemId) {\n      return;\n    }\n\n    const recipe = this.recipes.getRecipe(itemId);\n\n    try {\n      this.onRecipeLoaded(recipe);\n    } catch (error) {\n      this.onError(error);\n    }\n  }\n\n  renderIngredients(ingrs) {\n    return ingrs.map(ingr => {\n      this.ingrKey++;\n      return React.createElement(Li, {\n        key: this.ingrKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, ingr);\n    });\n  }\n\n  renderInstructions(instrs) {\n    return instrs.map(instr => {\n      this.instrKey++;\n      return React.createElement(Li, {\n        key: this.instrKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, instr);\n    });\n  }\n\n  render() {\n    const {\n      recipe,\n      loading,\n      error,\n      imageLoading\n    } = this.state;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n\n    if (error) {\n      return React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n\n    const [{\n      name,\n      id,\n      yields,\n      cookTime,\n      ingredients,\n      instructions\n    }] = recipe;\n    const ingrs = this.renderIngredients(ingredients);\n    const instrs = this.renderInstructions(instructions);\n    const imageStatus = imageLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }) : null;\n    return React.createElement(\"div\", {\n      className: s.RecipesDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: s.RecipeContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, name), React.createElement(Image, {\n      src: Images[id],\n      alt: \"Recipe Image\",\n      onLoad: this.onLoadImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), imageStatus, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Yield: \", yields, \" servings\"), React.createElement(CookTime, {\n      cookTime: cookTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Ol, {\n      headText: \"Ingredients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, ingrs), React.createElement(Ol, {\n      headText: \"Instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, instrs)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/recipes-page-components/RecipesDetails.js"],"names":["React","Component","Images","Image","Li","Ol","RecipesData","CookTime","Spinner","ErrorIndicator","s","RecipesDetails","recipes","ingrKey","instrKey","state","recipe","loading","error","imageLoading","onLoadImage","setState","onRecipeLoaded","onError","onLoad","componentDidMount","updateItem","componentDidUpdate","prevProps","props","itemId","getRecipe","renderIngredients","ingrs","map","ingr","renderInstructions","instrs","instr","render","name","id","yields","cookTime","ingredients","instructions","imageStatus","RecipeContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Images from \"../../assets\";\r\nimport { Image, Li, Ol } from \"../ui\";\r\nimport RecipesData from \"../recipes-database/RecipesData\";\r\nimport CookTime from \"../cook-time\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport s from \"./RecipesDetails.module.css\";\r\n\r\nexport default class RecipesDetails extends Component {\r\n  recipes = new RecipesData();\r\n  ingrKey = 0;\r\n  instrKey = 0;\r\n\r\n  state = {\r\n    recipe: null,\r\n    loading: true,\r\n    error: false,\r\n    imageLoading: \"loading\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateItem();\r\n    }\r\n  }\r\n\r\n  onLoadImage = () => {\r\n    this.setState({\r\n      imageLoading: \"loaded\",\r\n    });\r\n  };\r\n\r\n  onRecipeLoaded = (recipe) => {\r\n    this.setState({\r\n      recipe,\r\n      loading: false,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  onError = (error) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  onLoad = () => {\r\n    this.setState({\r\n      loading: true,\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  updateItem() {\r\n    this.onLoad();\r\n    const { itemId } = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n    const recipe = this.recipes.getRecipe(itemId);\r\n    try {\r\n      this.onRecipeLoaded(recipe);\r\n    } catch (error) {\r\n      this.onError(error);\r\n    }\r\n  }\r\n\r\n  renderIngredients(ingrs) {\r\n    return ingrs.map((ingr) => {\r\n      this.ingrKey++;\r\n      return <Li key={this.ingrKey}>{ingr}</Li>;\r\n    });\r\n  }\r\n\r\n  renderInstructions(instrs) {\r\n    return instrs.map((instr) => {\r\n      this.instrKey++;\r\n      return <Li key={this.instrKey}>{instr}</Li>;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { recipe, loading, error, imageLoading } = this.state;\r\n\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    const [{ name, id, yields, cookTime, ingredients, instructions }] = recipe;\r\n    const ingrs = this.renderIngredients(ingredients);\r\n    const instrs = this.renderInstructions(instructions);\r\n\r\n    const imageStatus = imageLoading ? <Spinner /> : null;\r\n\r\n    return (\r\n      <div className={s.RecipesDetails}>\r\n        <div className={s.RecipeContent}>\r\n          <h1>{name}</h1>\r\n          <Image\r\n            src={Images[id]}\r\n            alt=\"Recipe Image\"\r\n            onLoad={this.onLoadImage}\r\n          />\r\n          {imageStatus}\r\n          <p>Yield: {yields} servings</p>\r\n          <CookTime cookTime={cookTime} />\r\n          <Ol headText=\"Ingredients\">{ingrs}</Ol>\r\n          <Ol headText=\"Instructions\">{instrs}</Ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}