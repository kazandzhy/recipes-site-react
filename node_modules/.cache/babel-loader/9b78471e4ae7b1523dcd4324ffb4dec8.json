{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\cook-time\\\\CookTime.js\";\nimport React, { Component } from \"react\";\nimport s from \"./CookTime.module.css\";\nexport default class CookTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      classNames: `${s.TimeInfo} ${s.Hide}`,\n      seconds: 0,\n      minutes: this.props.cookTime,\n      isPause: false,\n      isStart: true,\n      cookingTime: 0,\n      interval: 0\n    };\n\n    this.counter = () => {\n      console.log(\"Counter works\"); // this.setState({\n      //   minutes: this.state.cookingTime,\n      // });\n\n      if (this.state.seconds === 0) {\n        this.setState({\n          seconds: 60,\n          minutes: this.state.minutes - 1\n        });\n      } // if (this.state.seconds >= 0 && this.state.seconds <= 9) {\n      //   this.setState({\n      //     seconds: `0${this.state.seconds}`,\n      //   });\n      // }\n      // if (this.state.cookingTime >= 0 && this.state.cookingTime <= 9) {\n      //   this.setState({\n      //     minutes: `0${this.state.cookingTime}`,\n      //   });\n      // }\n\n\n      if (this.state.minutes === 0 && this.state.seconds === 0) {\n        this.setState({\n          interval: 0\n        });\n      } // document.getElementById(`timeInfo${id}`).innerHTML =\n      //   minutes + \"min : \" + seconds + \"sec\";\n\n\n      this.setState({\n        seconds: this.state.seconds - 1\n      });\n    };\n\n    this.startTimer = () => {\n      console.log(\"StartTimer works\");\n\n      () => {\n        this.setState({\n          isStart: true,\n          interval: clearInterval(this.state.interval)\n        });\n      };\n\n      setTimeout(() => {\n        this.setState({\n          classNames: `${s.TimeInfo} ${s.Show}`\n        }); // this.setState({\n        //   minutes: this.props.cookTime,\n        //   seconds: 0,\n        // });\n      }, 1);\n\n      if (this.state.isStart) {\n        const interval = setInterval(this.counter, 1000);\n        this.setState({\n          isStart: false,\n          interval: interval\n        });\n        console.log(this.state.isStart); // why still true?\n\n        console.log(this.state.interval);\n        return this.state.interval;\n      }\n    };\n  }\n\n  // continueCounter = () => {\n  //   if (this.isPause) {\n  //     clearInterval(this.interval);\n  //     this.interval = setInterval(this.counter, 1000);\n  //     this.isPause = false;\n  //     return this.interval;\n  //   }\n  // };\n  render() {\n    const {\n      classNames,\n      minutes,\n      seconds\n    } = this.state;\n    const {\n      cookTime\n    } = this.props;\n    const timerContent = `${minutes}min : ${seconds}sec`;\n    return React.createElement(\"div\", {\n      className: s.cookTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Cook Time: \", cookTime, \" minutes\"), React.createElement(\"button\", {\n      className: s.Start,\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: s.Pause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: s.Continue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, timerContent)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/cook-time/CookTime.js"],"names":["React","Component","s","CookTime","state","classNames","TimeInfo","Hide","seconds","minutes","props","cookTime","isPause","isStart","cookingTime","interval","counter","console","log","setState","startTimer","clearInterval","setTimeout","Show","setInterval","render","timerContent","Start","Pause","Continue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport s from \"./CookTime.module.css\";\r\n\r\nexport default class CookTime extends Component {\r\n  pauseBtn;\r\n  id;\r\n  prevId;\r\n\r\n  state = {\r\n    classNames: `${s.TimeInfo} ${s.Hide}`,\r\n    seconds: 0,\r\n    minutes: this.props.cookTime,\r\n    isPause: false,\r\n    isStart: true,\r\n    cookingTime: 0,\r\n    interval: 0,\r\n  };\r\n\r\n  counter = () => {\r\n    console.log(\"Counter works\");\r\n    // this.setState({\r\n    //   minutes: this.state.cookingTime,\r\n    // });\r\n\r\n    if (this.state.seconds === 0) {\r\n      this.setState({\r\n        seconds: 60,\r\n        minutes: this.state.minutes - 1,\r\n      });\r\n    }\r\n\r\n    // if (this.state.seconds >= 0 && this.state.seconds <= 9) {\r\n    //   this.setState({\r\n    //     seconds: `0${this.state.seconds}`,\r\n    //   });\r\n    // }\r\n\r\n    // if (this.state.cookingTime >= 0 && this.state.cookingTime <= 9) {\r\n    //   this.setState({\r\n    //     minutes: `0${this.state.cookingTime}`,\r\n    //   });\r\n    // }\r\n\r\n    if (this.state.minutes === 0 && this.state.seconds === 0) {\r\n      this.setState({\r\n        interval: 0,\r\n      });\r\n    }\r\n\r\n    // document.getElementById(`timeInfo${id}`).innerHTML =\r\n    //   minutes + \"min : \" + seconds + \"sec\";\r\n    this.setState({\r\n      seconds: this.state.seconds - 1,\r\n    });\r\n  };\r\n\r\n  // pauseCounter = () => {\r\n  //   // user can not press pause and continue before start\r\n  //   if (!this.isStart) {\r\n  //     clearInterval(this.interval);\r\n  //     this.isPause = true;\r\n  //   }\r\n  // };\r\n\r\n  startTimer = () => {\r\n    console.log(\"StartTimer works\");\r\n    () => {\r\n      this.setState({\r\n        isStart: true,\r\n        interval: clearInterval(this.state.interval),\r\n      });\r\n    };\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classNames: `${s.TimeInfo} ${s.Show}`,\r\n      });\r\n\r\n      // this.setState({\r\n      //   minutes: this.props.cookTime,\r\n      //   seconds: 0,\r\n      // });\r\n    }, 1);\r\n\r\n    if (this.state.isStart) {\r\n      const interval = setInterval(this.counter, 1000);\r\n      this.setState({\r\n        isStart: false,\r\n        interval: interval,\r\n      });\r\n      console.log(this.state.isStart); // why still true?\r\n      console.log(this.state.interval);\r\n      return this.state.interval;\r\n    }\r\n  };\r\n\r\n  // continueCounter = () => {\r\n  //   if (this.isPause) {\r\n  //     clearInterval(this.interval);\r\n  //     this.interval = setInterval(this.counter, 1000);\r\n  //     this.isPause = false;\r\n  //     return this.interval;\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { classNames, minutes, seconds } = this.state;\r\n    const { cookTime } = this.props;\r\n    const timerContent = `${minutes}min : ${seconds}sec`;\r\n    return (\r\n      <div className={s.cookTime}>\r\n        <p>Cook Time: {cookTime} minutes</p>\r\n        <button className={s.Start} onClick={this.startTimer}>\r\n          Start\r\n        </button>\r\n        <button className={s.Pause}>Pause</button>\r\n        <button className={s.Continue}>Continue</button>\r\n        <div className={classNames}>\r\n          <span>{timerContent}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}