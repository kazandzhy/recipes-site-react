{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\cook-time\\\\CookTime.js\";\nimport React, { Component } from \"react\";\nimport s from \"./CookTime.module.css\";\nexport default class CookTime extends Component {\n  constructor(...args) {\n    super(...args);\n    this.seconds = 0;\n    this.minutes = 0;\n    this.isPause = false;\n    this.isStart = true;\n    this.classNames = `${s.TimeInfo} ${s.Show}`;\n\n    this.counter = () => {\n      this.minutes = this.cookingTime;\n\n      if (this.seconds == -1) {\n        this.seconds = 59;\n        this.cookingTime--;\n      }\n\n      if (this.seconds >= 0 && this.seconds <= 9) {\n        this.seconds = `0${this.seconds}`;\n      }\n\n      if (this.cookingTime >= 0 && this.cookingTime <= 9) {\n        this.minutes = `0${this.cookingTime}`;\n      }\n\n      if (this.cookingTime == 0 && this.seconds == 0) {\n        clearInterval(this.interval);\n      } // document.getElementById(`timeInfo${id}`).innerHTML =\n      //   minutes + \"min : \" + seconds + \"sec\";\n      // seconds--;\n\n    };\n\n    this.pauseCounter = () => {\n      // user can not press pause and continue before start\n      if (!this.isStart) {\n        clearInterval(this.interval);\n        this.isPause = true;\n      }\n    };\n\n    this.startTimer = () => {\n      clearInterval(this.interval);\n      this.isStart = true;\n      setTimeout(() => {\n        this.classNames = `${s.TimeInfo} ${s.Show}`;\n        this.cookingTime = this.props.cookTime;\n        this.seconds = 0;\n      }, 1);\n\n      if (this.isStart) {\n        this.interval = setInterval(this.counter, 1000);\n        this.isStart = false;\n        return this.interval;\n      }\n    };\n\n    this.continueCounter = () => {\n      if (this.isPause) {\n        clearInterval(this.interval);\n        this.interval = setInterval(this.counter, 1000);\n        this.isPause = false;\n        return this.interval;\n      }\n    };\n  }\n\n  render() {\n    const {\n      cookTime\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Cook Time: \", cookTime, \" minutes\"), React.createElement(\"button\", {\n      className: s.Start,\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Start\"), React.createElement(\"button\", {\n      className: s.Pause,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Pause\"), React.createElement(\"button\", {\n      className: s.Continue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"div\", {\n      className: this.classNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/cook-time/CookTime.js"],"names":["React","Component","s","CookTime","seconds","minutes","isPause","isStart","classNames","TimeInfo","Show","counter","cookingTime","clearInterval","interval","pauseCounter","startTimer","setTimeout","props","cookTime","setInterval","continueCounter","render","Start","Pause","Continue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport s from \"./CookTime.module.css\";\r\n\r\nexport default class CookTime extends Component {\r\n  cookingTime;\r\n  seconds = 0;\r\n  minutes = 0;\r\n  interval;\r\n  pauseBtn;\r\n  isPause = false;\r\n  isStart = true;\r\n  id;\r\n  prevId;\r\n  classNames = `${s.TimeInfo} ${s.Show}`;\r\n\r\n  counter = () => {\r\n    this.minutes = this.cookingTime;\r\n    if (this.seconds == -1) {\r\n      this.seconds = 59;\r\n      this.cookingTime--;\r\n    }\r\n\r\n    if (this.seconds >= 0 && this.seconds <= 9) {\r\n      this.seconds = `0${this.seconds}`;\r\n    }\r\n\r\n    if (this.cookingTime >= 0 && this.cookingTime <= 9) {\r\n      this.minutes = `0${this.cookingTime}`;\r\n    }\r\n\r\n    if (this.cookingTime == 0 && this.seconds == 0) {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    // document.getElementById(`timeInfo${id}`).innerHTML =\r\n    //   minutes + \"min : \" + seconds + \"sec\";\r\n    // seconds--;\r\n  };\r\n\r\n  pauseCounter = () => {\r\n    // user can not press pause and continue before start\r\n    if (!this.isStart) {\r\n      clearInterval(this.interval);\r\n      this.isPause = true;\r\n    }\r\n  };\r\n\r\n  startTimer = () => {\r\n    clearInterval(this.interval);\r\n    this.isStart = true;\r\n    setTimeout(() => {\r\n      this.classNames = `${s.TimeInfo} ${s.Show}`;\r\n      this.cookingTime = this.props.cookTime;\r\n      this.seconds = 0;\r\n    }, 1);\r\n\r\n    if (this.isStart) {\r\n      this.interval = setInterval(this.counter, 1000);\r\n      this.isStart = false;\r\n      return this.interval;\r\n    }\r\n  };\r\n\r\n  continueCounter = () => {\r\n    if (this.isPause) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.counter, 1000);\r\n      this.isPause = false;\r\n      return this.interval;\r\n    }\r\n  };\r\n  render() {\r\n    const { cookTime } = this.props;\r\n    return (\r\n      <div>\r\n        <p>Cook Time: {cookTime} minutes</p>\r\n        <button className={s.Start} onClick={this.startTimer}>\r\n          Start\r\n        </button>\r\n        <button className={s.Pause}>Pause</button>\r\n        <button className={s.Continue}>Continue</button>\r\n        <div className={this.classNames}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}