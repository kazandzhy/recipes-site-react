{"ast":null,"code":"import React from\"react\";import{Input,Label,TextArea}from\"../ui\";import s from\"./FormElement.module.css\";export default function FormElement(_ref){var formElType=_ref.formElType,labelText=_ref.labelText,fieldName=_ref.fieldName,inputType=_ref.inputType,cols=_ref.cols,inputRequired=_ref.inputRequired;var element=\"\";console.log(formElType);if(formElType===\"input\"){element=React.createElement(Input,{type:inputType,id:fieldName,name:fieldName,required:inputRequired});}else if(formElType===\"textArea\"){element=React.createElement(TextArea,{id:fieldName,cols:cols,name:fieldName});}return React.createElement(\"div\",{className:s.FormElement},React.createElement(Label,{htmlFor:fieldName,text:labelText}),React.createElement(\"span\",null,element));}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-react/src/components/form-element/FormElement.js"],"names":["React","Input","Label","TextArea","s","FormElement","formElType","labelText","fieldName","inputType","cols","inputRequired","element","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,KAAhB,CAAuBC,QAAvB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,CAAP,KAAc,0BAAd,CAEA,cAAe,SAASC,CAAAA,WAAT,MAOZ,IANDC,CAAAA,UAMC,MANDA,UAMC,CALDC,SAKC,MALDA,SAKC,CAJDC,SAIC,MAJDA,SAIC,CAHDC,SAGC,MAHDA,SAGC,CAFDC,IAEC,MAFDA,IAEC,CADDC,aACC,MADDA,aACC,CACD,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAC,OAAO,CAACC,GAAR,CAAYR,UAAZ,EACA,GAAIA,UAAU,GAAK,OAAnB,CAA4B,CAC1BM,OAAO,CACL,oBAAC,KAAD,EACE,IAAI,CAAEH,SADR,CAEE,EAAE,CAAED,SAFN,CAGE,IAAI,CAAEA,SAHR,CAIE,QAAQ,CAAEG,aAJZ,EADF,CAQD,CATD,IASO,IAAIL,UAAU,GAAK,UAAnB,CAA+B,CACpCM,OAAO,CAAG,oBAAC,QAAD,EAAU,EAAE,CAAEJ,SAAd,CAAyB,IAAI,CAAEE,IAA/B,CAAqC,IAAI,CAAEF,SAA3C,EAAV,CACD,CAED,MACE,4BAAK,SAAS,CAAEJ,CAAC,CAACC,WAAlB,EACE,oBAAC,KAAD,EAAO,OAAO,CAAEG,SAAhB,CAA2B,IAAI,CAAED,SAAjC,EADF,CAEE,gCAAOK,OAAP,CAFF,CADF,CAMD","sourcesContent":["import React from \"react\";\r\nimport { Input, Label, TextArea } from \"../ui\";\r\nimport s from \"./FormElement.module.css\";\r\n\r\nexport default function FormElement({\r\n  formElType,\r\n  labelText,\r\n  fieldName,\r\n  inputType,\r\n  cols,\r\n  inputRequired,\r\n}) {\r\n  let element = \"\";\r\n  console.log(formElType);\r\n  if (formElType === \"input\") {\r\n    element = (\r\n      <Input\r\n        type={inputType}\r\n        id={fieldName}\r\n        name={fieldName}\r\n        required={inputRequired}\r\n      />\r\n    );\r\n  } else if (formElType === \"textArea\") {\r\n    element = <TextArea id={fieldName} cols={cols} name={fieldName} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.FormElement}>\r\n      <Label htmlFor={fieldName} text={labelText} />\r\n      <span>{element}</span>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}