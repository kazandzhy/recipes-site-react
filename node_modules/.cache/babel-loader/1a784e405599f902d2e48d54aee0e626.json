{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlad_\\\\Desktop\\\\React\\\\recipes-site-react\\\\src\\\\components\\\\recipes-page-components\\\\RecipesList.js\";\nimport React, { Component } from \"react\";\nimport RecipesData from \"../recipes-database/RecipesData\";\nimport { Li, Ul } from \"../ui\";\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\nimport s from \"./RecipesList.module.css\";\nexport default class RecipesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.recipes = new RecipesData();\n    this.state = {\n      recipesList: null,\n      loading: true,\n      error: false\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.recipes.getAllRecipes().then(data => this.setState({\n      recipesList: data,\n      loading: false,\n      error: false\n    })).catch(this.onError);\n  }\n\n  renderItems(arr) {\n    return arr.map(({\n      id,\n      name\n    }) => {\n      return React.createElement(Li, {\n        className: s.ListGroupItem,\n        key: id,\n        onClick: () => this.props.onItemSelected(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, name);\n    });\n  }\n\n  render() {\n    const {\n      recipesList,\n      loading,\n      error\n    } = this.state;\n\n    if (!recipesList) {\n      if (loading) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }\n    }\n\n    const items = this.renderItems(recipesList);\n    return React.createElement(Ul, {\n      className: s.RecipesList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, items);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/vlad_/Desktop/React/recipes-site-react/src/components/recipes-page-components/RecipesList.js"],"names":["React","Component","RecipesData","Li","Ul","Spinner","ErrorIndicator","s","RecipesList","recipes","state","recipesList","loading","error","onError","err","setState","componentDidMount","getAllRecipes","then","data","catch","renderItems","arr","map","id","name","ListGroupItem","props","onItemSelected","render","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,EAAT,EAAaC,EAAb,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,OAAOC,CAAP,MAAc,0BAAd;AAEA,eAAe,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDQ,OADiD,GACvC,IAAIP,WAAJ,EADuC;AAAA,SAGjDQ,KAHiD,GAGzC;AACNC,MAAAA,WAAW,EAAE,IADP;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAHyC;;AAAA,SASjDC,OATiD,GAStCC,GAAD,IAAS;AACjB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,IADK;AAEZD,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAdgD;AAAA;;AAgBjDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,OAAL,CACGS,aADH,GAEGC,IAFH,CAESC,IAAD,IACJ,KAAKJ,QAAL,CAAc;AACZL,MAAAA,WAAW,EAAES,IADD;AAEZR,MAAAA,OAAO,EAAE,KAFG;AAGZC,MAAAA,KAAK,EAAE;AAHK,KAAd,CAHJ,EASGQ,KATH,CASS,KAAKP,OATd;AAUD;;AAEDQ,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,WAAOA,GAAG,CAACC,GAAJ,CAAQ,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAD,KAAkB;AAC/B,aACE,oBAAC,EAAD;AACE,QAAA,SAAS,EAAEnB,CAAC,CAACoB,aADf;AAEE,QAAA,GAAG,EAAEF,EAFP;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKG,KAAL,CAAWC,cAAX,CAA0BJ,EAA1B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGC,IALH,CADF;AASD,KAVM,CAAP;AAWD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,WAAF;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKH,KAA7C;;AAEA,QAAI,CAACC,WAAL,EAAkB;AAChB,UAAIC,OAAJ,EAAa;AACX,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;AAED,UAAMmB,KAAK,GAAG,KAAKT,WAAL,CAAiBX,WAAjB,CAAd;AAEA,WAAO,oBAAC,EAAD;AAAI,MAAA,SAAS,EAAEJ,CAAC,CAACC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BuB,KAA/B,CAAP;AACD;;AAvDgD","sourcesContent":["import React, { Component } from \"react\";\r\nimport RecipesData from \"../recipes-database/RecipesData\";\r\nimport { Li, Ul } from \"../ui\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport s from \"./RecipesList.module.css\";\r\n\r\nexport default class RecipesList extends Component {\r\n  recipes = new RecipesData();\r\n\r\n  state = {\r\n    recipesList: null,\r\n    loading: true,\r\n    error: false,\r\n  };\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.recipes\r\n      .getAllRecipes()\r\n      .then((data) =>\r\n        this.setState({\r\n          recipesList: data,\r\n          loading: false,\r\n          error: false,\r\n        })\r\n      )\r\n      .catch(this.onError);\r\n  }\r\n\r\n  renderItems(arr) {\r\n    return arr.map(({ id, name }) => {\r\n      return (\r\n        <Li\r\n          className={s.ListGroupItem}\r\n          key={id}\r\n          onClick={() => this.props.onItemSelected(id)}\r\n        >\r\n          {name}\r\n        </Li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { recipesList, loading, error } = this.state;\r\n\r\n    if (!recipesList) {\r\n      if (loading) {\r\n        return <Spinner />;\r\n      }\r\n    }\r\n\r\n    const items = this.renderItems(recipesList);\r\n\r\n    return <Ul className={s.RecipesList}>{items}</Ul>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}